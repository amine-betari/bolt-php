version: '3.4'



services:
  database:
    image: 'mysql:latest'
    container_name: 'bolt_bdd'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: bolt
    ports:
      # To allow the host machine to access the ports below, modify the lines below.
      # For example, to allow the host to connect to port 3306 on the container, you would change
      # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
      # See https://docs.docker.com/compose/compose-file/#ports for more information.
      - '3306'
    networks:
      - bolt_cms

  phpmyadmin:
    image: phpmyadmin
    container_name: 'bolt_phpmyadmin'
    restart: always
    depends_on:
      - database
    ports:
      - '8989:80'
    environment:
      PMA_HOST: database
    networks:
      - bolt_cms
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - target: 1080
        published: 1080
        protocol: tcp
        
networks:
  bolt_cms:     
#  db:
#    image: mysql:5.7
#    environment:
#      - MYSQL_DATABASE=bolt
#      - MYSQL_USER=bolt
#      - MYSQL_PASSWORD=bolt123
#      - MYSQL_ROOT_PASSWORD=bolt123
#    volumes:
#      - db-data:/var/lib/mysql:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/mysql:rw
#    ports:
#      - target: 3306
#        published: 3306
#        protocol: tcp

#  php:
#    build:
#      context: ./
#      target: php
#    healthcheck:
#      interval: 10s
#      timeout: 3s
#      retries: 3
#      start_period: 30s
#    depends_on:
#      - db
#      - mailcatcher
#    volumes:
#      - ./:/srv/bolt:rw,cached
#      - ./docker/php/conf.d/bolt.dev.ini:/usr/local/etc/php/conf.d/bolt.ini
#      # if you develop on Linux, you may use a bind-mounted host directory instead
#      # - ./var:/srv/bolt/var:rw
#
#  nginx:
#    build:
#      context: ./
#      target: nginx
#    depends_on:
#      - php
#    volumes:
#      - ./public:/srv/bolt/public:ro
#    ports:
#      - target: 80
#        published: 8080
#        protocol: tcp
#
#  h2-proxy:
#    build:
#      context: ./docker/h2-proxy
#    depends_on:
#      - nginx
#    ports:
#      - target: 8443
#        published: 8443
#        protocol: tcp


#
#volumes:
#  db-data: {}
